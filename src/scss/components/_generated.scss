@use "sass:map";
@use "@angular/material" as mat;
@use "../mixin";

@mixin apply-theme($theme) {
  $color-config: mat.get-color-config($theme);
  $palette: map.get($color-config, primary);
  $accent: map.get($color-config, accent);
  $warn: map.get($color-config, warn);
  $background-palette: map-get(
    $map: $color-config,
    $key: background,
  );

  app-generated {
    display: flex;
    position: relative;
    align-items: center;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    justify-content: center;
    width: 100vw;
    height: 100vh;
    &.real-size {
      @media (orientation: landscape) {
        background-size: auto 100vh;
      }

      @media (orientation: portrait) {
        background-size: 100vw auto;
      }
    }
    [content] {
      display: flex;
      flex-direction: column;
      width: 100%;
      height: 100%;
      .toggle {
        &:hover {
          cursor: pointer;
        }
      }
      app-prompt {
        background-color: rgba(255,255,255,0.5);
        color: mat.get-color-from-palette($background-palette, status-bar);
      }
      div[info] {
        padding: 0 0.5rem;
        display: flex;
        align-items: center;
        background-color: rgba(0, 0, 0, 0.5);
        &:hover {
          cursor: pointer;
        }
        [timestamp] {
          font-family: 'Share Tech Mono';
        }
      }
      [status] {
        padding: 1rem 0.5rem;
        display: flex;
        align-items: center;
        justify-content: center;
        [label] {
          font-family: 'Share Tech Mono';
          text-transform: uppercase;
          font-variant: small-caps;
          font-size: 2.5rem;
        }
      }

    }
  }
  [status-line] {
    padding: 1rem;
    width: 100%;
    text-align: center;
    @each $status, $color in mixin.status-colors($theme) {
      &[status="#{$status}"] {
          background-color: adjust-color($color, $alpha: -0.7);
      }
    }
  }
}
